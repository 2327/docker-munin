FROM alpine:3.19 as builder

ARG NGINX_VERSION=1.25.3
ARG NGINX_VTS_VERSION
ARG NGINX_LDAP_VERSION
ARG NGINX_KRB5_VERSION
ARG NGINX_PAM_VERSION
ARG NGINX_NAXSI_VERSION
ARG NGINX_RDNS_VERSION

RUN apk --no-cache add \
      bash~=5.2.21 \
      curl~=8.5.0 \
      openssl-dev~=3.1.4 \
      pcre-dev~=8.45 \
      zlib-dev~=1.3 \
      gcc~=13.2.1 \
      make~=4.4.1 \
      g++~=13.2.1 \
      zlib-dev~=1.3 \
      linux-headers~=6.5 

SHELL ["/bin/bash", "-o", "pipefail", "-c"]
WORKDIR /usr/src

RUN curl -sLf http://nginx.org/download/nginx-"${NGINX_VERSION}".tar.gz | tar -zxf - && \
    (if [ -n "${NGINX_NAXSI_VERSION}" ]; then \
      curl -Ls https://github.com/nbs-system/naxsi/archive/refs/tags/${NGINX_NAXSI_VERSION}.tar.gz \
        | tar xz -C nginx-"${NGINX_VERSION}"; \
    fi) && \
    (if [ -n "${NGINX_RDNS_VERSION}" ]; then \
      curl -Ls https://github.com/flant/nginx-http-rdns/archive/refs/heads/master.zip -o /tmp/rdns.zip && \
      unzip /tmp/rdns.zip -d nginx-"${NGINX_VERSION}"; \
    fi) && \
    (if [ -n "${NGINX_VTS_VERSION}" ]; then \
      curl -Ls https://github.com/vozlt/nginx-module-vts/archive/refs/tags/v"${NGINX_VTS_VERSION}".tar.gz \
        | tar xz -C nginx-"${NGINX_VERSION}"; \
    fi) && \
    (if [ -n "${NGINX_KRB5_VERSION}" ]; then \
      curl -Ls https://github.com/stnoonan/spnego-http-auth-nginx-module/archive/refs/tags/v"${NGINX_KRB5_VERSION}".tar.gz \
        | tar xz -C nginx-"${NGINX_VERSION}"; \
    fi) && \
    (if [ -n "${NGINX_LDAP_VERSION}" ]; then \
      curl -Ls https://github.com/kvspb/nginx-auth-ldap/archive/refs/tags/v"${NGINX_LDAP_VERSION}".tar.gz \
         | tar xz -C nginx-"${NGINX_VERSION}"; \
    fi) && \
    (if [ -n "${NGINX_PAM_VERSION}" ]; then \
      curl -Ls https://github.com/sto/ngx_http_auth_pam_module/archive/refs/tags/v"${NGINX_PAM_VERSION}".tar.gz \
         | tar xz -C nginx-"${NGINX_VERSION}"; \
    fi)

WORKDIR /usr/src/nginx-"${NGINX_VERSION}"

RUN ./configure --prefix=/etc/nginx \
      --sbin-path=/usr/sbin/nginx \
      --modules-path=/usr/lib/nginx/modules \
      --conf-path=/etc/nginx/nginx.conf \
      --error-log-path=/var/log/nginx/error.log \
      --http-log-path=/var/log/nginx/access.log \
      --pid-path=/var/run/nginx.pid \
      --lock-path=/var/run/nginx.lock \
      --http-client-body-temp-path=/var/cache/nginx/client_temp \
      --http-proxy-temp-path=/var/cache/nginx/proxy_temp \
      --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \
      --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \
      --http-scgi-temp-path=/var/cache/nginx/scgi_temp \
      --user=nginx \
      --group=nginx \
      --with-compat \
      --with-file-aio \
      --with-threads \
      --with-http_addition_module \
      --with-http_auth_request_module \
      --with-http_dav_module \
      --with-http_flv_module \
      --with-http_gunzip_module \
      --with-http_gzip_static_module \
      --with-http_mp4_module \
      --with-http_random_index_module \
      --with-http_realip_module \
      --with-http_secure_link_module \
      --with-http_slice_module \
      --with-http_ssl_module \
      --with-http_stub_status_module \
      --with-http_sub_module \
      --with-http_v2_module \
      --with-mail \
      --with-mail_ssl_module \
      --with-stream \
      --with-stream_realip_module \
      --with-stream_ssl_module \
      --with-stream_ssl_preread_module \
      ${NGINX_RDNS_VERSION:+ --add-module=nginx-http-rdns-master} \
      ${NGINX_NAXSI_VERSION:+ --add-module=naxsi-${NGINX_NAXSI_VERSION}/naxsi_src} \
      ${NGINX_VTS_VERSION:+ --add-module=nginx-module-vts-${NGINX_VTS_VERSION}} \
      ${NGINX_LDAP_VERSION:+ --add-module=nginx-auth-ldap-${NGINX_LDAP_VERSION}} \
      ${NGINX_KRB5_VERSION:+ --add-module=spnego-http-auth-nginx-module-${NGINX_KRB5_VERSION}} \
      ${NGINX_PAM_VERSION:+ --add-module=ngx_http_auth_pam_module-${NGINX_PAM_VERSION}} \
      --with-cc-opt='-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fPIC' \
      --with-ld-opt='-Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie' && \
    make -j "$(getconf _NPROCESSORS_ONLN)" && \
    make install

FROM alpine:3.19 as munin

RUN apk --no-cache add \
      munin~=2.0.75 \
      munin-node~=2.0.75 

FROM alpine:3.19

COPY --from=builder /usr/sbin/nginx /usr/sbin/nginx
COPY --from=builder /etc/nginx /etc/nginx
#COPY --from=munin /etc/munin/static /etc/munin/static/
COPY ./contrib/templates/munstrap/static /etc/munin/static
COPY  ./contrib/templates/munstrap/templates /etc/munin/templates
COPY nginx.conf /etc/nginx/nginx.conf

RUN apk --no-cache add \
      ca-certificates~=20230506 \
      pcre~=8.45 && \
    mkdir /var/log/nginx && \
    addgroup -g 101 -S nginx && \
    adduser -h /var/cache/nginx -S -u 101 -g "nginx web server" -G nginx -s /sbin/nologin nginx && \
    chown -R nginx:nginx /etc/nginx /var/log/nginx /etc/munin/static && \
    ln -sf /dev/stdout /var/log/nginx/access.log && \ 
    ln -sf /dev/stderr /var/log/nginx/error.log

VOLUME ["/var/log/nginx"]

WORKDIR /etc/nginx

EXPOSE 80 443

CMD ["nginx", "-g", "daemon off;"]

